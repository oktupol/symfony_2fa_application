{% extends '::base.html.twig' %}

{% block base_html_body_header_inner %}
    <h1>Two Factor Authentication</h1>
{% endblock %}

{% block base_html_body_content_inner %}
    {{ form_start(form) }}
    <fieldset>
        <legend>Second Factor</legend>
        <div class="input-row">
            Insert and activate your key now
        </div>
        {% if useTrustedOption %}
            <div class="input-row">
                <label for="trusted">Trust this computer</label>
                <input type="checkbox" id="trusted" name="_trusted">
            </div>
        {% endif %}
        <div class="input-row">
            <button id="skip-u2f" type="button">Use different 2FA method</button>
        </div>
    </fieldset>
    <a href="{{ path('security_logout') }}">Cancel</a>
    {{ form_widget(form) }}
    {{ form_end(form) }}
{% endblock %}

{% block base_html_body_javascripts %}
    <script src="{{ asset('assets/src/js/u2f-api.js') }}" type="text/javascript"></script>
    <script type="text/javascript">
        (function (u2f) {
            var request = {{ request | json_encode | raw }},
                    appId = request.appId,
                    challenge = request.challenge,
                    signs = [{ version: request.version, keyHandle: request.keyHandle }];

            u2f.sign(appId, challenge, signs, function (deviceResponse) {
                var responseInput = document.getElementById('form_response_input');
                responseInput.value = JSON.stringify(deviceResponse);
                if (deviceResponse.errorCode !== undefined) {
                    var error;
                    switch (deviceResponse.errorCode) {
                        case 1:
                            error = 'Unknown error';
                            break;
                        case 2:
                            error = 'There is a problem with the server.';
                            break;
                        case 3:
                            error = 'This configuration is not supported';
                            break;
                        case 4:
                            error = 'This key is already registered with this account';
                            break;
                        case 5:
                            return;
                    }
                    alert(error);
                } else {
                    responseInput.form.submit();
                }
            });

            var skipButton = document.getElementById('skip-u2f');
            skipButton.onclick = function(event) {
                var skipInput = document.getElementById('form_skip');
                skipInput.value = 'skip';
                skipInput.form.submit();
            };
        })(u2f);
    </script>
{% endblock %}
